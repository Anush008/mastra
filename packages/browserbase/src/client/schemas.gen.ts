// This file is auto-generated by @hey-api/openapi-ts

export const SessionSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        updatedAt: {
            type: 'string',
            format: 'date-time'
        },
        projectId: {
            type: 'string'
        },
        startedAt: {
            type: 'string',
            format: 'date-time'
        },
        endedAt: {
            type: 'string',
            format: 'date-time'
        },
        expiresAt: {
            type: 'string',
            format: 'date-time'
        },
        status: {
            type: 'string',
            enum: ['RUNNING', 'ERROR', 'TIMED_OUT', 'COMPLETED']
        },
        proxyBytes: {
            type: 'integer'
        },
        avgCpuUsage: {
            type: 'integer'
        },
        memoryUsage: {
            type: 'integer'
        },
        keepAlive: {
            type: 'boolean'
        },
        contextId: {
            type: 'string'
        },
        region: {
            type: 'string',
            enum: ['us-west-2', 'us-east-1', 'eu-central-1', 'ap-southeast-1']
        }
    }
} as const;

export const CreateSessionRequestSchema = {
    type: 'object',
    required: ['projectId'],
    properties: {
        projectId: {
            type: 'string'
        },
        extensionId: {
            type: 'string'
        },
        browserSettings: {
            type: 'object'
        },
        context: {
            type: 'object',
            properties: {
                id: {
                    type: 'string'
                },
                persist: {
                    type: 'boolean'
                }
            }
        },
        timeout: {
            type: 'integer'
        },
        keepAlive: {
            type: 'boolean'
        },
        proxies: {
            oneOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'array',
                    items: {
                        type: 'string'
                    }
                }
            ]
        },
        region: {
            type: 'string',
            enum: ['us-west-2', 'us-east-1', 'eu-central-1', 'ap-southeast-1']
        }
    }
} as const;

export const CreatedSessionSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        updatedAt: {
            type: 'string',
            format: 'date-time'
        },
        projectId: {
            type: 'string'
        },
        startedAt: {
            type: 'string',
            format: 'date-time'
        },
        endedAt: {
            type: 'string',
            format: 'date-time'
        },
        expiresAt: {
            type: 'string',
            format: 'date-time'
        },
        status: {
            type: 'string'
        },
        proxyBytes: {
            type: 'integer'
        },
        avgCpuUsage: {
            type: 'integer'
        },
        memoryUsage: {
            type: 'integer'
        },
        keepAlive: {
            type: 'boolean'
        },
        contextId: {
            type: 'string'
        },
        region: {
            type: 'string'
        },
        connectUrl: {
            type: 'string'
        },
        seleniumRemoteUrl: {
            type: 'string'
        },
        signingKey: {
            type: 'string'
        }
    }
} as const;

export const SessionLogSchema = {
    type: 'object',
    properties: {
        eventId: {
            type: 'string'
        },
        method: {
            type: 'string'
        },
        pageId: {
            type: 'integer'
        },
        request: {
            type: 'object',
            properties: {
                timestamp: {
                    type: 'integer'
                },
                params: {
                    type: 'object'
                },
                rawBody: {
                    type: 'string'
                }
            }
        },
        response: {
            type: 'object',
            properties: {
                timestamp: {
                    type: 'integer'
                },
                result: {
                    type: 'object'
                },
                rawBody: {
                    type: 'string'
                }
            }
        },
        sessionId: {
            type: 'string'
        },
        timestamp: {
            type: 'integer'
        },
        frameId: {
            type: 'string'
        },
        loaderId: {
            type: 'string'
        }
    }
} as const;

export const CreateContextRequestSchema = {
    type: 'object',
    required: ['projectId'],
    properties: {
        projectId: {
            type: 'string'
        }
    }
} as const;

export const CreatedContextSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        uploadUrl: {
            type: 'string'
        },
        publicKey: {
            type: 'string'
        },
        cipherAlgorithm: {
            type: 'string'
        },
        initializationVectorSize: {
            type: 'integer'
        }
    }
} as const;

export const UploadedExtensionSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        updatedAt: {
            type: 'string',
            format: 'date-time'
        },
        fileName: {
            type: 'string'
        },
        projectId: {
            type: 'string'
        }
    }
} as const;